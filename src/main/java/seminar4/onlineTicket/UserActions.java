package seminar4.onlineTicket;

import java.util.Date;

/**
 * Интерфейс, определяющий действия пользователя.
 */
interface UserActions {
        /*
Компонент: UserActions
Версия: 1.0.0
Описание: Этот компонент определяет контракты для действий пользователя.
Изменения:
- 1.0.0: Первая версия.
- 1.1.0: Добавлена поддержка новой функциональности.*/
        /**
         * Метод для авторизации пользователя
         *
         * @param username имя Пользователя.
         * @param password Пароль.
         * @return возвращает true, если пользователь успешно авторизован, иначе false
         */
        boolean authorize(String username, String password);
        /**
         * Метод, в котором пользователь должен выбрать конкретный маршрут и время
         *
         * @param routeId Id маршрута.
         * @param time Время маршрута.
         * @return возвращает true, если маршрут выбран, иначе false
         */
        boolean selectRoute(String routeId, Date time);
        /**
         * Метод для проверки доступности билета
         * @return возвращает true, если билет доступен, иначе false
         */
        boolean checkTicketAvailability();
        /**
         * Метод для проверки достаточного баланса для покупки билета
         * @return возвращает true, если денег достаточно, иначе false
         */
        boolean checkFunds();
        /**
         * Попытка забронировать билет.
         * @return true, если бронирование успешно, false в противном случае.
         * @pre User должен быть авторизован и выбран маршрут.
         * @pre Билеты на выбранный маршрут и время должны быть доступны.
         * @pre У пользователя должно быть достаточно средств для бронирования.
         * @post Билет забронирован.
         *
         * Этот метод позволяет пользователю попытаться забронировать билет на выбранный маршрут и время.
         * Для успешной бронировки необходимо выполнение следующих условий:
         * - Пользователь должен быть предварительно авторизован в системе (authorize).
         * - Пользователь должен выбрать конкретный маршрут и время (selectRoute).
         * - Должны быть доступны билеты на выбранный маршрут и время (checkTicketAvailability).
         * - У пользователя должно быть достаточно средств для бронирования (checkFunds).
         *
         * Если все предусловия выполняются, билет будет успешно забронирован, и метод вернет true.
         * В противном случае, если хотя бы одно из предусловий не выполняется, бронирование не будет произведено, и метод вернет false.
         */
        boolean reserveTicket();

        /**
         * Метод для подтверждения бронирование
         * @return возвращает true, если бронирование прошло успешно, иначе false
         */
        boolean confirmPurchase();
        /**
         * Метод для обновления информации доступности билета
         */
        void updateTicketAvailability();
        /**
         * Метод для отмены билета, при отмене информация о пассажире будет очищена,
         *  и билет вернётся в список доступных для бронирования
         * @param ticket билет с заполненными данными пассажира
         * @return возвращает true в случае успешной отмены, и false если операция не пройдёт
         */
        boolean cancelReservation(Ticket ticket);
}
